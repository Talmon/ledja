version: '3.8'
services: 
    main:
        build: 
            context: .
            dockerfile: Dockerfile
        command: /bin/sh -c 'php artisan migrate --seed && php artisan serve --host=0.0.0.0'
        env_file:
            - .env
        volumes:
            - .:/app
        ports:
            - 8000:8000
        depends_on: 
            - db
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=Host(`api.direktory.biz`)"
            - "traefik.http.routers.backend.tls=true"

    # queue:
    #     build: 
    #         context: .
    #         dockerfile: Dockerfile
    #     command: 'php artisan queue:work'
    #     networks:
    #         - laradock
    #     depends_on: 
    #         - db        

    db:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - ./storage/dbdata:/var/lib/mysql
        ports:
            - 3306:3306

    frontend:
            build: ../ledja-frontend
            container_name: frontend
            restart: unless-stopped
            expose:
              - 3000
            ports:
              "3000:3000"
            labels:
              - "traefik.enable=true"
              - "traefik.http.routers.frontend.rule=Host(`direktory.biz`)"
              - "traefik.http.routers.frontend.tls=true"
      

    traefik:
        image: traefik:latest
        container_name: traefik
        command:
        - --entrypoints.web.address=:80
        - --entrypoints.web-secure.address=:443
        - --providers.docker=true
        - --providers.file.directory=/configuration/
        - --providers.file.watch=true
        # restart: on-failure
        ports:
        - "80:80"
        - "443:443"
        volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"
        - "/etc/letsencrypt:/etc/letsencrypt"
        # Add all our tls certificates here
        # Api service tls
        - "/etc/letsencrypt/live/api.direktory.biz/fullchain.pem:/certs/backend/fullchain.pem"
        - "/etc/letsencrypt/live/api.direktory.biz/privkey.pem:/certs/backend/privkey.pem"
        # Frontend service tls
        - "/etc/letsencrypt/live/direktory.biz/fullchain.pem:/certs/backend/fullchain.pem"
        - "/etc/letsencrypt/live/direktory.biz/privkey.pem:/certs/backend/privkey.pem"


        - "/srv/ledja/configuration:/configuration/"
